./build/linux64_release/bin/bcl-example-apps-static.exe Examples -exec AppMoleculeProperties 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> AppMoleculeProperties
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: AppMoleculeProperties ====================
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!
=std=bcl=> Checking command line:
molecule:Properties -add 'Add(Atom_SigmaCharge,Atom_Vcharge)' -input_filenames example/example_files/input/chemistry/csd_first_1115_simple.sdf -input_max 100 -input_start 5 -numeric_histogram Atom_EffectivePolarizability 1 0.25 30 -output example/example_files/output/chemistry/csd_100mols_with_props.sdf -output_histogram example/example_files/output/chemistry/csd_100mols.hist -output_table example/example_files/output/chemistry/csd_100mols.table -rename 'Add(Atom_SigmaCharge,Atom_Vcharge)' AtomSigmaVCharge -statistics Atom_Vcharge Atom_SigmaCharge Atom_PiCharge Atom_EffectivePolarizability TotalFormalCharge TopologicalPolarSurfaceArea 'Equal(Atom_Stereocenters,Constant(1))' 'Equal(Atom_Stereocenters,Constant(-1))' 'Equal(Atom_Stereocenters,Constant(0))' -string_histogram AtomTypes BondTypes -tabulate 'Numeric(NAtoms)' 'Numeric(NStereo)' AtomTypes 

=std=bcl=> Command line was valid
=std=bcl=> successful example check:  molecule_properties_helper.CheckCommandString( true) == 1
=crt=bcl::random=> Seed was set to 5489!
=std=bcl=> Running command line: molecule:Properties -add 'Add(Atom_SigmaCharge,Atom_Vcharge)' -input_filenames example/example_files/input/chemistry/csd_first_1115_simple.sdf -input_max 100 -input_start 5 -numeric_histogram Atom_EffectivePolarizability 1 0.25 30 -output example/example_files/output/chemistry/csd_100mols_with_props.sdf -output_histogram example/example_files/output/chemistry/csd_100mols.hist -output_table example/example_files/output/chemistry/csd_100mols.table -rename 'Add(Atom_SigmaCharge,Atom_Vcharge)' AtomSigmaVCharge -statistics Atom_Vcharge Atom_SigmaCharge Atom_PiCharge Atom_EffectivePolarizability TotalFormalCharge TopologicalPolarSurfaceArea 'Equal(Atom_Stereocenters,Constant(1))' 'Equal(Atom_Stereocenters,Constant(-1))' 'Equal(Atom_Stereocenters,Constant(0))' -string_histogram AtomTypes BondTypes -tabulate 'Numeric(NAtoms)' 'Numeric(NStereo)' AtomTypes 

 Status: Counting molecules for input Status: Found 100 molecules           Status: [                    ] 0% 0/100 molecules read Status: [********************] 100% 100/100 molecules read
=std=bcl=> Run completed of molecule:Properties -add 'Add(Atom_SigmaCharge,Atom_Vcharge)' -input_filenames example/example_files/input/chemistry/csd_first_1115_simple.sdf -input_max 100 -input_start 5 -numeric_histogram Atom_EffectivePolarizability 1 0.25 30 -output example/example_files/output/chemistry/csd_100mols_with_props.sdf -output_histogram example/example_files/output/chemistry/csd_100mols.hist -output_table example/example_files/output/chemistry/csd_100mols.table -rename 'Add(Atom_SigmaCharge,Atom_Vcharge)' AtomSigmaVCharge -statistics Atom_Vcharge Atom_SigmaCharge Atom_PiCharge Atom_EffectivePolarizability TotalFormalCharge TopologicalPolarSurfaceArea 'Equal(Atom_Stereocenters,Constant(1))' 'Equal(Atom_Stereocenters,Constant(-1))' 'Equal(Atom_Stereocenters,Constant(0))' -string_histogram AtomTypes BondTypes -tabulate 'Numeric(NAtoms)' 'Numeric(NStereo)' AtomTypes 
, return status was: 0
Command line took 0.096925 sec to run
=std=bcl=> successful example check:  molecule_properties_helper.RunCommand() == 0
=std=bcl=> successful example check:
              io::File::FilesMatchWithinAbsoluteTolerance ( output_filename_props_test, output_filename_props_test + ".correct", 0.05 )
              == 1
=std=bcl=> successful example check:
              io::File::FilesMatchWithinAbsoluteTolerance ( output_filename_hists_test, output_filename_hists_test + ".correct", 0.4 )
              == 1
=std=bcl=> successful example check:
              io::File::FilesMatchWithinAbsoluteTolerance ( output_filename_table_test, output_filename_table_test + ".correct", 0.05 )
              == 1
=std=bcl::app=> BCL Example | END  : AppMoleculeProperties ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
AppMoleculeProperties_total               5          0              
total                                     5          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 116 MB, peak physical RAM used: 57 MB
