./build/linux64_release/bin/bcl-example-static.exe Examples -exec AlignAlignmentHit 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> AlignAlignmentHit
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: AlignAlignmentHit ====================
=std=bcl=> 2: AlignmentHit()
=std=bcl=> 2:  test succeeded:  ConditionCheck( default_alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 3: AlignmentHit( alignment, alignment)
=std=bcl=> 3:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 4: GetSequences()
=std=bcl=> 4: sequence_list.Size=2!=2 test succeeded:  sequences_list.GetSize() == exp_list_size == 2
=std=bcl=> 5: GetChildAlignments()
=std=bcl=> 5: child_alignment_list.Size=2!=2 test succeeded:  child_alignment_list.GetSize() == exp_list_size == 2
=std=bcl=> 6: GetDepth()
=std=bcl=> 6: Depth=2!=2 test succeeded:  depth == alignment_word->GetDepth() * 2 == 2
=std=bcl=> 7: Prepend(assignment)
=std=bcl=> 7:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 8: Prepend(assignment_list)
=std=bcl=> 8:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 9: PrependNextAssignment()
=std=bcl=> 9:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 10: Append(assignment)
=std=bcl=> 10:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 11: Append(assignment_list)
=std=bcl=> 11:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 12: AppendNextAssignment()
=std=bcl=> 12:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 13: Clone()
=std=bcl=> 13:  test succeeded:  ConditionCheck( *alignment_hit_clone, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 14: Empty()
=std=bcl=> 14:  test succeeded:  ConditionCheck( *alignment_hit_empty, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl=> 15: ResetAssignments()
=std=bcl=> 15:  test succeeded:  ConditionCheck( alignment_hit, assign_score, exp_empty, exp_size, exp_score) == 1
=std=bcl::app=> BCL Example | END  : AlignAlignmentHit ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
AlignAlignmentHit_total                  14          0              
total                                    14          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
