./build/linux64_release/bin/bcl-example-static.exe Examples -exec AssembleSSEPoolAgreement 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> AssembleSSEPoolAgreement
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: AssembleSSEPoolAgreement ====================
=std=bcl::pdb=> HELIX line is ignored, since helix class is not considered:
HELIX    2  H2 LEU A   56  TYR A   59  5                                   4    
=std=bcl=> successful example check:  agreement.GetDefaultScheme() == sse_pool_agreement
=std=bcl=> successful example check:  agreement_b.GetScheme() == test
=std=bcl=> Native vs A: 74.5098
=std=bcl=> A vs native: 74.5098
=std=bcl=> Native vs B: 77.551
=std=bcl=> B vs native: 77.551
=std=bcl=> A vs B: 95.4545
=std=bcl=> B vs A: 95.4545
=std=bcl=> successful example check:  q3_expected_native_vs_a == q3_native_vs_a == 74.5098  (+/- 0.001%)
=std=bcl=> successful example check:  q3_expected_native_vs_a == q3_a_vs_native == 74.5098  (+/- 0.001%)
=std=bcl=> successful example check:  q3_expected_native_vs_b == q3_native_vs_b == 77.551  (+/- 0.001%)
=std=bcl=> successful example check:  q3_expected_native_vs_b == q3_b_vs_native == 77.551  (+/- 0.001%)
=std=bcl=> successful example check:  q3_expected_a_vs_b == q3_a_vs_b == 95.4545  (+/- 0.001%)
=std=bcl=> successful example check:  q3_expected_a_vs_b == q3_b_vs_a == 95.4545  (+/- 0.001%)
=std=bcl=> Native vs A: 10.0858
=std=bcl=> A vs native: 5.2575
=std=bcl=> Native vs B: 11.9013
=std=bcl=> B vs native: 5.66296
=std=bcl=> A vs B: 6.76157
=std=bcl=> B vs A: 3.72736
=std=bcl=> successful example check:  expected_native_vs_a == agreement_native_vs_a == 10.0858  (+/- 0.001%)
=std=bcl=> successful example check:  expected_a_vs_native == agreement_a_vs_native == 5.2575  (+/- 0.001%)
=std=bcl=> successful example check:  expected_native_vs_b == agreement_native_vs_b == 11.9013  (+/- 0.001%)
=std=bcl=> successful example check:  expected_b_vs_native == agreement_b_vs_native == 5.66296  (+/- 0.001%)
=std=bcl=> successful example check:  expected_a_vs_b == agreement_a_vs_b == 6.76157  (+/- 0.001%)
=std=bcl=> successful example check:  expected_b_vs_a == agreement_b_vs_a == 3.72736  (+/- 0.001%)
=std=bcl=> successful example check:  expected_ab == agreement_ab == 10.4889  (+/- 0.001%)
=std=bcl=> AB agreement: 10.4889
=std=bcl=> successful example check:  agreement_read.GetScheme() == agreement_b.GetScheme() == test
=std=bcl=> successful example check:
               agreement_read.AgreementToTemplate( pool_a, pool_b) ==
              agreement_b.AgreementToTemplate( pool_a, pool_b) == 6.76157
=std=bcl=> successful example check:
               overlap_a == expected_overlap_a == bcl::storage::VectorND<2,int>
                13
                -17
=std=bcl=> successful example check:
               overlap_b == expected_overlap_b == bcl::storage::VectorND<2,int>
                -13
                17
=std=bcl=> successful example check:
               overlap_c == expected_overlap_c == bcl::storage::VectorND<2,int>
                2
                0
=std=bcl=> successful example check:
               overlap_d == expected_overlap_d == bcl::storage::VectorND<2,int>
                -2
                0
=std=bcl::app=> BCL Example | END  : AssembleSSEPoolAgreement ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
AssembleSSEPoolAgreement_total           21          0              
total                                    21          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 65 MB
