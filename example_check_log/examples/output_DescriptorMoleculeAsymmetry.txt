./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorMoleculeAsymmetry 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorMoleculeAsymmetry
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorMoleculeAsymmetry ====================
=std=bcl::chemistry=> finished reading ensemble with 1 molecules.
=std=bcl=> Size of Ensemble: 1
=std=bcl=> successful example check:  mol_molecular_asymmetry.GetAlias() == MolecularAsymmetry
=std=bcl=> successful example check:  copy_mol_molecular_asymmetry.GetChemInfoProperty() == atom_property == Constant(1)
=std=bcl=> successful example check:  mol_molecular_asymmetry.GetNumberSteps() == 24
=std=bcl=> successful example check:  mol_molecular_asymmetry.GetStepSize() == 0.1  (+/- 0.001%)
=std=bcl=> successful example check:  mol_molecular_asymmetry.GetTemperature() == 100.0 == 100
=std=bcl=> successful example check:  stored_molecular_asymmetry.First() == 0.311583  (+/- 0.001%)
=std=bcl=> Outputting mol_molecular_asymmetry: bcl::linal::Vector<float>
  24
  0.311583	3.55698	26.3448	35.5219	-23.3772	19.7785	32.0751	-9.72009	-30.8901	-26.1276	-86.4014	-90.8042	-30.0531	68.361	105.329	121.494	124.271	86.8658	54.4026	62.4473	53.1441	33.2511	23.9915	14.9437	
=std=bcl::app=> BCL Example | END  : DescriptorMoleculeAsymmetry ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>     success      error error_string 
DescriptorMoleculeAsymmetry_total          6          0              
total                                      6          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
