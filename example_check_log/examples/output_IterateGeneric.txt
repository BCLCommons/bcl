./build/linux64_release/bin/bcl-example-static.exe Examples -exec IterateGeneric 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> IterateGeneric
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: IterateGeneric ====================
=std=bcl=> successful example check:
               GetTestName( GetHighestTestPassed( storage::Vector< char>())) ==
              GetTestName( s_NumberTests) == All
=std=bcl=> successful example check:
               GetTestName( GetHighestTestPassed( storage::Vector< char>( 1, 'a'))) ==
              GetTestName( s_NumberTests) == All
=std=bcl=> successful example check:
              GetTestName( GetHighestTestPassed( storage::Set< char>::Create( 'a', 'e', 'i', 'o', 'u'))) ==
              GetTestName( s_NumberTests) == All
=std=bcl=> successful example check:
               GetTestName( GetHighestTestPassed( storage::Vector< char>( 9, "aeiouaaa"))) ==
              GetTestName( s_NumberTests) == All
=std=bcl=> successful example check:
              GetTestName ( GetHighestTestPassed( storage::List< char>( std::string( "abracadabra").size(), "abracadabra")) )
              == GetTestName( s_NumberTests) == All
=std=bcl=> Generic iterator can handle pointer vectors without additional dereferencing test succeeded:
              to_add + original_value == added_to == 5.1
=std=bcl::util=> 100 million iterations with constructed simple pointer vector to interface has run for 0.327602 seconds
=std=bcl::util=> 100 million iterations with native iterator on vector has run for 9e-05 seconds
=std=bcl::util=> 100 million iterations with Generic iterator to derived class on vector has run for 0.199406 seconds
=std=bcl::util=> 100 million iterations with Generic iterator to base on vector has run for 0.33553 seconds
=std=bcl::util=> 100 million iterations with Generic iterator on list has run for 0.34609 seconds
=std=bcl::util=> 100 million iterations with native iterator on list has run for 0.213599 seconds
=std=bcl::app=> BCL Example | END  : IterateGeneric ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
IterateGeneric_total                      6          0              
total                                     6          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:01, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
