./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorWindowWeights 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorWindowWeights
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorWindowWeights ====================
=std=bcl=> successful example check:  rectangular_window( 5).Sum() == float( 5.0) == 5
=std=bcl=> successful example check:  rectangular_window( 5).GetSize() == 5
=std=bcl=> successful example check:  rectangular_window( 5)( 4) == float( 1.0) == 1
=std=bcl=> successful example check:  triangular_window( 5).Sum() == float( 3.0) == 3  (+/- 0.0001%)
=std=bcl=> successful example check:  triangular_window( 5).GetSize() == 5
=std=bcl=> successful example check:  triangular_window( 5)( 4) == float( 0.2) == 0.2  (+/- 0.0001%)
=std=bcl=> successful example check:  welch_window( 5).Sum() == float( 3.8) == 3.8  (+/- 0.0001%)
=std=bcl=> successful example check:  welch_window( 5).GetSize() == 5
=std=bcl=> successful example check:  welch_window( 5)( 4) == float( 9.0) / float( 25.0) == 0.36  (+/- 0.0001%)
=std=bcl=> successful example check:  gaussian_window( 5).Sum() == float( 3.17746) == 3.17746  (+/- 0.0001%)
=std=bcl=> successful example check:  gaussian_window( 5).GetSize() == 5
=std=bcl=> successful example check:  gaussian_window( 5)( 4) == float( 0.2) == 0.2  (+/- 0.0001%)
=std=bcl=> successful example check:  hamming_window( 5).Sum() == float( 2.71739) == 2.71739  (+/- 0.0001%)
=std=bcl=> successful example check:  hamming_window( 5).GetSize() == 5
=std=bcl=> successful example check:  hamming_window( 5)( 4) == float( 4.0) / float( 46.0) == 0.0869565  (+/- 0.0001%)
=std=bcl=> successful example check:  hann_window( 5).Sum() == float( 2.5) == 2.5  (+/- 0.0001%)
=std=bcl=> successful example check:  hann_window( 5).GetSize() == 5
=std=bcl=> successful example check:  hann_window( 5)( 4) == float( 0.0) == 1.88738e-15  (+/- 0.0001)
=std=bcl::app=> BCL Example | END  : DescriptorWindowWeights ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
DescriptorWindowWeights_total            18          0              
total                                    18          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
