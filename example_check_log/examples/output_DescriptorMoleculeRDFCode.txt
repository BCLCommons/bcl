./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorMoleculeRDFCode 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorMoleculeRDFCode
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorMoleculeRDFCode ====================
=std=bcl=> successful example check:  rdf_code.GetClassIdentifier() == bcl::descriptor::MoleculeRDFCode
=std=bcl=> Charges: bcl::linal::Vector<float>
  12
  -0.058154	-0.058154	-0.058154	-0.058154	-0.058154	-0.058154	0.058154	0.058154	0.058154	0.058154	0.058154	0.058154	
=std=bcl=> SetNumberSteps test succeeded:  rdf_code.GetNumberSteps() == 128
=std=bcl=> successful example check:  rdf_code.GetStepSize() == float( 0.1) == 0.1
=std=bcl=> successful example check:  rdf_code.GetTemperature() == 100.0 == 100
=std=bcl=> successful example check:
               vector_rdf_code == expected_vector
              output of result suppressed (result was 858 bytes), set message verbosity to Detail to override  (+/- 0.001)
=std=bcl=> vector: bcl::linal::Vector<float>
  128
  0	-5.60519e-45	-1.66599e-36	-3.03592e-29	-7.48746e-23	-2.49926e-17	-1.12907e-12	-6.90327e-09	-5.71245e-06	-0.000639765	-0.00969722	-0.0198898	-0.00506874	0.00803632	0.0202374	0.00672454	0.000302404	1.84052e-06	-1.44935e-07	-6.40078e-05	-0.0037863	-0.0303125	-0.0326485	0.00123155	0.0302361	0.0295901	0.00586929	0.00470133	0.0100417	0.00301305	0.00012236	-4.3e-06	-0.000739705	-0.0148928	-0.040582	-0.0149667	-0.000757173	-0.00092977	-0.0114331	-0.0191315	-0.00432977	0.000286985	0.00792924	0.0202722	0.00701385	0.000328421	2.10241e-06	1.07825e-05	0.000743314	0.00693606	0.00875934	0.00149709	3.46283e-05	1.08402e-07	4.59265e-11	2.63333e-15	2.04346e-20	2.14592e-26	3.05003e-33	5.86668e-41	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
=std=bcl=> successful example check:  vector_rdf_code.GetSize() == 128
=std=bcl=> MoleculeRDFCode I/O test succeeded:  TestBCLObjectIOForSymmetry( rdf_code, descriptor::MoleculeRDFCode()) == 1
=std=bcl::app=> BCL Example | END  : DescriptorMoleculeRDFCode ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
DescriptorMoleculeRDFCode_total           7          0              
total                                     7          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
