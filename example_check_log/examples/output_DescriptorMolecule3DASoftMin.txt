./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorMolecule3DASoftMin 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorMolecule3DASoftMin
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorMolecule3DASoftMin ====================
=std=bcl=> successful example check:  copy_rdf_code.GetAtomProperty().GetString() == Atom_Vcharge
=std=bcl=> successful example check:
               rdf_code.GetAtomProperty().GetAlias() == descriptor::AtomVcharge().GetAlias() ==
              Atom_Vcharge
=std=bcl=> successful example check:  rdf_code.GetNumberSteps() == 48
=std=bcl=> successful example check:  rdf_code.GetStepSize() == float( 0.25) == 0.25
=std=bcl=> successful example check:  rdf_code.GetTemperature() == 100.0 == 100
=std=bcl=> successful example check:  vector_vdw_rdf_code.GetSize() == 48
=std=bcl=> successful example check:
               vector_vdw_rdf_code == expected_vector
              output of result suppressed (result was 510 bytes), set message verbosity to Detail to override  (+/- 0.001)
=std=bcl=> vector: bcl::linal::Vector<float>
  48
  1.93146e-05	0.49324	0.49324	-0.222184	-0.390687	-0.441989	-0.101381	-0.104289	-0.0287338	-0.376031	-0.303917	-0.438851	-0.140678	-0.143946	-0.398371	-0.191292	-0.385211	-0.380022	-0.216155	-0.387017	-0.37946	-0.369288	-0.194058	-0.377173	-0.388412	-0.376919	-0.387345	-0.388577	-0.451912	-0.240781	-0.379604	-0.144818	-0.386838	-0.357707	-0.368963	-0.464699	-0.387908	-0.379639	-0.117516	-0.376376	-0.376401	-0.130824	-0.389431	-0.387526	-0.256352	-0.116173	-0.14919	-0.219168	
=std=bcl=> Molecule3DASoftMin I/O test succeeded:
              TestBCLObjectIOForSymmetry( rdf_code, descriptor::Molecule3DASoftMin( atom_property)) == 1
=std=bcl::app=> BCL Example | END  : DescriptorMolecule3DASoftMin ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>      success      error error_string 
DescriptorMolecule3DASoftMin_total          8          0              
total                                       8          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
