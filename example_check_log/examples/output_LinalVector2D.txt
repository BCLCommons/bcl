./build/linux64_release/bin/bcl-example-static.exe Examples -exec LinalVector2D 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> LinalVector2D
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: LinalVector2D ====================
=std=bcl=> successful example check:
               linal::Vector2D() == double( 0.0) == bcl::linal::Vector2D
                0	0
=std=bcl=> successful example check:
               vector1 == double( 3.5) == bcl::linal::Vector2D
                3.5	3.5
=std=bcl=> this is an random vector of two elements vector1
=std=bcl=> bcl::linal::Vector2D
  0.786821	0.25048
=std=bcl=> this is vector of two elements vector2
=std=bcl=> bcl::linal::Vector2D
  4	-3
=std=bcl=> this is the scalar product of the vectors, using two different functions
=std=bcl=> linal::ScalarProduct( vector1, vector2): 2.39584
=std=bcl=> vector1 * vector2: 2.39584
=std=bcl=> compute projection angle between vector2 and vector1 and output as formatted degree
=std=bcl=>  54.528ø
=std=bcl=> successful example check:
               vector_def.GetClassIdentifier() == GetStaticClassName< linal::Vector2D>() ==
              bcl::linal::Vector2D
=std=bcl=> successful example check:
               sp_vector->GetClassIdentifier() == GetStaticClassName< linal::Vector2D>() ==
              bcl::linal::Vector2D
=std=bcl=> successful example check:  vector_const_a.X() == x == 1
=std=bcl=> successful example check:  vector_const_a.Y() == y == 2
=std=bcl=> successful example check:  vector_a.X() == x + diff == 2.5
=std=bcl=> successful example check:  vector_a.Y() == y + diff == 3.5
=std=bcl=> successful example check:  total == 5.0 == 5
=std=bcl=> successful example check:  sp_vector->operator ()( 0) == values[ 0] + diff == 3.5
=std=bcl=> successful example check:  sp_vector->operator ()( 1) == values[ 1] + diff == 4.5
=std=bcl=> successful example check:  vector_c( 0) == linal_vector( 0) == 2
=std=bcl=> successful example check:  vector_c( 1) == linal_vector( 1) == 3
=std=bcl=> successful example check:  vector_const_b( 0) == values[ 0] == 2
=std=bcl=> successful example check:  vector_const_b( 1) == values[ 1] == 3
=std=bcl=> successful example check:  vector_b( 0) == values[ 0] + diff == 3.5
=std=bcl=> successful example check:  vector_b( 1) == values[ 1] + diff == 4.5
=std=bcl=> successful example check:
               vector_read == vector_a == bcl::linal::Vector2D
                2.5	3.5
=std=bcl::app=> BCL Example | END  : LinalVector2D ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
LinalVector2D_total                      18          0              
total                                    18          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
