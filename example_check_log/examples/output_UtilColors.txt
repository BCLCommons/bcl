./build/linux64_release/bin/bcl-example-static.exe Examples -exec UtilColors 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> UtilColors
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: UtilColors ====================
=std=bcl=> Constructing Color objects from all known Colors
=std=bcl=> successful example check:
               color_black == util::GetColors().e_Black == bcl::util::Colors::Enum
                "Black"
=std=bcl=> successful example check:
               color_blue == util::GetColors().e_Blue == bcl::util::Colors::Enum
                "Blue"
=std=bcl=> successful example check:
               color_cyan == util::GetColors().e_Cyan == bcl::util::Colors::Enum
                "Cyan"
=std=bcl=> successful example check:
               color_green == util::GetColors().e_Green == bcl::util::Colors::Enum
                "Green"
=std=bcl=> successful example check:
               color_magenta == util::GetColors().e_Magenta == bcl::util::Colors::Enum
                "Magenta"
=std=bcl=> successful example check:
               color_red == util::GetColors().e_Red == bcl::util::Colors::Enum
                "Red"
=std=bcl=> successful example check:
               color_white == util::GetColors().e_White == bcl::util::Colors::Enum
                "White"
=std=bcl=> successful example check:
               color_yellow == util::GetColors().e_Yellow == bcl::util::Colors::Enum
                "Yellow"
=std=bcl=> Constructing an undefined color
=std=bcl=> successful example check:  color_undefined.IsDefined() == 0
=std=bcl=> Calling copy constructor
=std=bcl=> successful example check:
               copy_green == color_green == bcl::util::Colors::Enum
                "Green"
=std=bcl=> successful example check:  util::GetColors().GetClassIdentifier() == bcl::util::Colors
=std=bcl=> The total number of colors is 8
=std=bcl=> successful example check:  util::GetColors().GetEnumCount() == 8
=std=bcl=> successful example check:
               util::GetColors().GetRainbow() == expected_rainbow ==
              bcl::storage::Vector<bcl::util::Colors::Enum>
                4
                bcl::util::Colors::Enum
                  "Blue"
                bcl::util::Colors::Enum
                  "Green"
                bcl::util::Colors::Enum
                  "Yellow"
                bcl::util::Colors::Enum
                  "Red"
=std=bcl::app=> BCL Example | END  : UtilColors ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
UtilColors_total                         13          0              
total                                    13          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
