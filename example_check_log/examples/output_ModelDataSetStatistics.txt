./build/linux64_release/bin/bcl-example-static.exe Examples -exec ModelDataSetStatistics 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> ModelDataSetStatistics
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: ModelDataSetStatistics ====================
=std=bcl=> successful example check:
               stats.GetMinMaxFeatures().GetMin() == linal::MakeVector< float>( 0.0, 0.0) ==
              bcl::linal::Vector<float>
                2
                0	0	
=std=bcl=> successful example check:
               stats.GetMinMaxFeatures().GetMax() == linal::MakeVector< float>( 1.0, 2.0) ==
              bcl::linal::Vector<float>
                2
                1	2	
=std=bcl=> successful example check:
               stats.GetMinMaxResults().GetMin() == linal::MakeVector< float>( -6.0) ==
              bcl::linal::Vector<float>
                1
                -6	
=std=bcl=> successful example check:
               stats.GetMinMaxResults().GetMax() == linal::MakeVector< float>( 6.0) ==
              bcl::linal::Vector<float>
                1
                6	
=std=bcl=> successful example check:
               stats.GetAveStdFeatures().GetAverage() == linal::MakeVector< float>( 0.5, 0.75) ==
              bcl::linal::Vector<float>
                2
                0.5	0.75	
               (+/- 0.0001)
=std=bcl=> successful example check:
               stats.GetAveStdResults().GetAverage() == linal::MakeVector< float>( 0.0) ==
              bcl::linal::Vector<float>
                1
                -7.07805e-08	
               (+/- 0.0001)
=std=bcl=> successful example check:
               stats.GetAveStdFeatures().GetStandardDeviation() ==
              linal::MakeVector< float>( math::Sqrt( 8.4 / 72.0), math::Sqrt( 25.5 / 72.0)) ==
              bcl::linal::Vector<float>
                2
                0.341565	0.595119	
               (+/- 0.0001)
=std=bcl=> successful example check:
               stats.GetAveStdResults().GetStandardDeviation() ==
              linal::MakeVector< float>( math::Sqrt( 271.4333333 / 72.0)) == bcl::linal::Vector<float>
                1
                1.94162	
               (+/- 0.0001)
=std=bcl=> Stats: bcl::model::DataSetStatistics
  bcl::math::RunningAverageSD<bcl::linal::Vector<float>>
    bcl::linal::Vector<float>
      2
      0.5	0.75	
    bcl::linal::Vector<float>
      2
      0.116667	0.354167	
    72
  bcl::math::RunningMinMax<bcl::linal::Vector<float>>
    bcl::linal::Vector<float>
      2
      0	0	
    bcl::linal::Vector<float>
      2
      1	2	
  bcl::math::RunningAverageSD<bcl::linal::Vector<float>>
    bcl::linal::Vector<float>
      1
      -7.07805e-08	
    bcl::linal::Vector<float>
      1
      3.7699	
    72
  bcl::math::RunningMinMax<bcl::linal::Vector<float>>
    bcl::linal::Vector<float>
      1
      -6	
    bcl::linal::Vector<float>
      1
      6	
=std=bcl::app=> BCL Example | END  : ModelDataSetStatistics ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
ModelDataSetStatistics_total              8          0              
total                                     8          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
