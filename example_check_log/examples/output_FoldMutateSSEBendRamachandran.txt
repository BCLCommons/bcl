./build/linux64_release/bin/bcl-example-static.exe Examples -exec FoldMutateSSEBendRamachandran 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> FoldMutateSSEBendRamachandran
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: FoldMutateSSEBendRamachandran ====================
=std=bcl=> successful example check:
              default_mutate.GetScheme() == GetStaticClassName< fold::MutateSSEBendRamachandran>() && default_mutate.GetNrResiduesChangeRange() == one_change
              == 1
=std=bcl=> successful example check:
               mutate_one.GetNrResiduesChangeRange() == one_change ==
              bcl::math::Range<size_t>
                [ 1 , 1 ]
=std=bcl=> successful example check:
               mutate_three.GetNrResiduesChangeRange() == three_changes ==
              bcl::math::Range<size_t>
                [ 3 , 3 ]
=std=bcl=> successful example check:
               mutate_one.GetBendingDirection() == biol::AASequenceFlexibility::e_Bidirectional ==
              2
=std=bcl=> successful example check:
               mutate_three.GetBendingDirection() == biol::AASequenceFlexibility::e_Bidirectional
              == 2
=std=bcl=> successful example check:  mutate_one.GetScheme() == bend_one
=std=bcl=> successful example check:  mutate_three.GetScheme() == bend_three
=std=bcl=> test operator() with one phi/psi change with helix
=std=bcl=> successful example check:  result_a.GetArgument().IsDefined() == 1
=std=bcl=> helix should have 1 phi/psi change test succeeded:
              biol::AASequenceFlexibility::GetNumberDifferentPhiPsi( *result_a.GetArgument(), *sp_helix) == 1
=std=bcl=> test operator() with three phi/psi changes with helix
=std=bcl=> successful example check:  result_b.GetArgument().IsDefined() == 1
=std=bcl=> helix should have only 3 phi/psi changes test succeeded:
              biol::AASequenceFlexibility::GetNumberDifferentPhiPsi( *result_b.GetArgument(), *sp_helix) == 3
=std=bcl=> test operator() with one phi/psi changes with strand
=std=bcl=> successful example check:  result_c.GetArgument().IsDefined() == 1
=std=bcl=> strand should have only 1 phi/psi change test succeeded:
              biol::AASequenceFlexibility::GetNumberDifferentPhiPsi( *result_c.GetArgument(), *sp_strand) == 1
=std=bcl=> test operator() with three phi/psi changes with strand
=std=bcl=> successful example check:  result_d.GetArgument().IsDefined() == 1
=std=bcl=> strand should have only 3 phi/psi changes test succeeded:
              biol::AASequenceFlexibility::GetNumberDifferentPhiPsi( *result_d.GetArgument(), *sp_strand) == 3
=std=bcl::app=> BCL Example | END  : FoldMutateSSEBendRamachandran ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>       success      error error_string 
FoldMutateSSEBendRamachandran_total         15          0              
total                                       15          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 134 MB, peak physical RAM used: 66 MB
