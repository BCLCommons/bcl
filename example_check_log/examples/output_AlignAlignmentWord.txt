./build/linux64_release/bin/bcl-example-static.exe Examples -exec AlignAlignmentWord 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> AlignAlignmentWord
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: AlignAlignmentWord ====================
=std=bcl=> 2: AlignmentWord()
=std=bcl=> 2:  test succeeded:
              ConditionCheck( default_word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 3: AlignmentWord(alignment)
=std=bcl=> 3:  test succeeded:
              ConditionCheck( empty_word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 4: AlignmentWord(alignment, itr_begin, itr_end)
=std=bcl=> 4:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 5: ScoreWith()
=std=bcl=> 5: ScoreWith==-0.2!=-0.2 test succeeded:
               word_alignment.ScoreWith( score_sequence, assign_score) ==
              exp_score_with == -0.2
=std=bcl=> 6: Prepend(assignment)
=std=bcl=> 6:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 7: Prepend(assignment_list)
=std=bcl=> 7:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 8: Append(assignment)
=std=bcl=> 8:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 9: Append(assignment_list)
=std=bcl=> 9:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 10: ResetAssignments()
=std=bcl=> 10:  test succeeded:
              ConditionCheck( word_alignment, assign_score, exp_empty, exp_size, exp_score, exp_self_score) == 1
=std=bcl=> 11: IsSubAlignment( self)
=std=bcl=> 11: alignment is not a subalignment of itself, but it should test succeeded:
              alignment->IsSubAlignment( *alignment) == 1
=std=bcl=> 12: IsSubAlignment( empty_alignment)
=std=bcl=> 12: empty word_alignment is a subalignment of itself, but it should not test succeeded:
              alignment->IsSubAlignment( word_alignment) == 0
=std=bcl=> 13: IsSubAlignment( sub_alignment)
=std=bcl=> 13: non-empty word_alignment is not a subalignment of itself, but it should test succeeded:
              alignment->IsSubAlignment( word_alignment) == 1
=std=bcl::app=> BCL Example | END  : AlignAlignmentWord ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
AlignAlignmentWord_total                 12          0              
total                                    12          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
