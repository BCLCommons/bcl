./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorMolecule3DASmoothSignOcclusionCode 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorMolecule3DASmoothSignOcclusionCode
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorMolecule3DASmoothSignOcclusionCode ====================
=std=bcl=> successful example check:  copy_rdf_code.GetAtomProperty().GetString() == Atom_Vcharge
=std=bcl=> successful example check:
               rdf_code.GetAtomProperty().GetAlias() == descriptor::AtomVcharge().GetAlias() ==
              Atom_Vcharge
=std=bcl=> successful example check:  rdf_code.GetNumberSteps() == 12
=std=bcl=> successful example check:  rdf_code.GetStepSize() == float( 0.5) == 0.5
=std=bcl=> successful example check:  vector_vdw_rdf_code.GetSize() == 12 * 3 * 3 == 108
=std=bcl=> successful example check:
               vector_vdw_rdf_code == expected_vector
              output of result suppressed (result was 706 bytes), set message verbosity to Detail to override  (+/- 0.001)
=std=bcl=> vector: bcl::linal::Vector<float>
  108
  2.20409	1.90631	0	0	1.48155e-06	3.79602e-05	0.038678	0.0535076	2.60632	0.142506	0.44659	3.76038	0.737572	1.0903	0.992962	2.71968	2.48177	4.31955	2.51116	1.58202	3.6196	0.906828	1.44751	2.69353	1.40728	2.22933	2.63373	1.83586	2.01221	3.82129	1.65557	1.7147	5.26411	2.23837	1.81111	4.14697	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0.00126188	0	0	0.0648108	0.157838	0.419437	0.227004	0.743976	0.378204	0.343803	0.991617	0.487298	0.531608	0.821204	0.504609	0.410683	1.0056	0.578471	0.434584	1.3204	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0.00660693	0.00690304	0	0.0701456	0.215175	0.256431	0.361911	0.716488	0.293093	0.687436	0.68397	0.267067	0.386552	0.562506	0.270552	0.35212	0.865678	
=std=bcl::app=> BCL Example | END  : DescriptorMolecule3DASmoothSignOcclusionCode ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>                      success      error error_string 
DescriptorMolecule3DASmoothSignOcclusionCode_total          6          0              
total                                                       6          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
