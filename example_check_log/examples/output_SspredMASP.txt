./build/linux64_release/bin/bcl-example-static.exe Examples -exec SspredMASP 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> SspredMASP
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: SspredMASP ====================
=std=bcl=> successful example check:
               def_construct.GetThreeStatePrediction() == def_prediction ==
              bcl::linal::Vector3D
                0	0	1
               (+/- 0.001%)
=std=bcl=> successful example check:  def_construct.GetFileExtension() == extension == .masp
=std=bcl=> successful example check:
               pred_construct.GetThreeStatePrediction() == helix == bcl::linal::Vector3D
                1	0	0
               (+/- 0.001%)
=std=bcl=> successful example check:
               pred_construct.GetNineStatePrediction().GetRow( 0) == helix ==
              bcl::linal::VectorReference<double>
                3
                1	0	0	
               (+/- 0.001%)
=std=bcl=> successful example check:
              seq.GetAA( 1)->GetSSPrediction( sspred::GetMethods().e_MASP)->GetThreeStatePrediction() ==
              linal::Vector3D( 0.164, 0.13, 0.706) == bcl::linal::Vector3D
                0.164	0.13	0.706
               (+/- 0.001%)
=std=bcl=> successful example check:
              seq.GetAA( 15)->GetSSPrediction( sspred::GetMethods().e_MASP)->GetThreeStatePrediction() == correct_pred ==
              bcl::linal::Vector3D
                1	0	0
               (+/- 0.001%)
=std=bcl=> successful example check:
              seq.GetAA( 39)->GetSSPrediction( sspred::GetMethods().e_MASP)->GetThreeStatePrediction() == correct_pred ==
              bcl::linal::Vector3D
                1	0	0
               (+/- 0.001%)
=std=bcl=> successful example check:
              seq.GetAA( 40)->GetSSPrediction( sspred::GetMethods().e_MASP)->GetThreeStatePrediction() ==
              linal::Vector3D( 0.575, 0.093, 0.332) == bcl::linal::Vector3D
                0.575	0.093	0.332
               (+/- 0.001%)
=std=bcl=>     1 S SER U: COIL
=std=bcl=>     2 N ASN U: COIL
=std=bcl=>     3 P PRO U: COIL
=std=bcl=>     4 K LYS U: COIL
=std=bcl=>     5 D ASP U: COIL
=std=bcl=>     6 D ASP U: COIL
=std=bcl=>     7 Y TYR U: COIL
=std=bcl=>     8 K LYS U: STRAND
=std=bcl=>     9 I ILE U: STRAND
=std=bcl=>    10 W TRP U: STRAND
=std=bcl=>    11 L LEU U: STRAND
=std=bcl=>    12 V VAL U: STRAND
=std=bcl=>    13 I ILE U: HELIX
=std=bcl=>    14 N ASN U: COIL
=std=bcl=>    15 P PRO U: HELIX
=std=bcl=>    16 S SER U: HELIX
=std=bcl=>    17 T THR U: HELIX
=std=bcl=>    18 W TRP U: HELIX
=std=bcl=>    19 L LEU U: HELIX
=std=bcl=>    20 P PRO U: HELIX
=std=bcl=>    21 V VAL U: HELIX
=std=bcl=>    22 I ILE U: HELIX
=std=bcl=>    23 W TRP U: HELIX
=std=bcl=>    24 I ILE U: HELIX
=std=bcl=>    25 V VAL U: HELIX
=std=bcl=>    26 A ALA U: HELIX
=std=bcl=>    27 T THR U: HELIX
=std=bcl=>    28 V VAL U: HELIX
=std=bcl=>    29 V VAL U: HELIX
=std=bcl=>    30 A ALA U: HELIX
=std=bcl=>    31 I ILE U: HELIX
=std=bcl=>    32 A ALA U: HELIX
=std=bcl=>    33 V VAL U: HELIX
=std=bcl=>    34 H HIS U: HELIX
=std=bcl=>    35 A ALA U: HELIX
=std=bcl=>    36 A ALA U: HELIX
=std=bcl=>    37 V VAL U: HELIX
=std=bcl=>    38 L LEU U: HELIX
=std=bcl=>    39 A ALA U: HELIX
=std=bcl=>    40 A ALA U: HELIX
=std=bcl=>    41 P PRO U: HELIX
=std=bcl=>    42 G GLY U: HELIX
=std=bcl=>    43 F PHE U: HELIX
=std=bcl=>    44 N ASN U: HELIX
=std=bcl=>    45 W TRP U: HELIX
=std=bcl=>    46 I ILE U: HELIX
=std=bcl=>    47 A ALA U: HELIX
=std=bcl=>    48 L LEU U: HELIX
=std=bcl=>    49 G GLY U: HELIX
=std=bcl=>    50 A ALA U: HELIX
=std=bcl=>    51 A ALA U: HELIX
=std=bcl=>    52 K LYS U: HELIX
=std=bcl=>    53 S SER U: HELIX
=std=bcl=>    54 A ALA U: HELIX
=std=bcl=>    55 A ALA U: HELIX
=std=bcl=>    56 K LYS U: COIL
=std=bcl=> successful example check:
               def_construct.GetThreeStatePrediction() == helix == bcl::linal::Vector3D
                1	0	0
               (+/- 0.001%)
=std=bcl::app=> BCL Example | END  : SspredMASP ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
SspredMASP_total                          9          0              
total                                     9          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
