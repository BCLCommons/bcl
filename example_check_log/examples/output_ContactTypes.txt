./build/linux64_release/bin/bcl-example-static.exe Examples -exec ContactTypes 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> ContactTypes
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: ContactTypes ====================
=std=bcl=> Constructing contact::Type
=std=bcl=> successful example check:  util::GetUndefined< contact::Type>().IsDefined() == 0
=std=bcl=> successful example check:
               contact::Type( type_a) == type_a == bcl::contact::Types::Enum
                "HELIX_HELIX"
=std=bcl=> The total number of contact::Types is 10
=std=bcl=> successful example check:  contact::GetTypes().GetEnumCount() == 10
=std=bcl=> successful example check:
               contact::GetTypes().Reverse( contact::GetTypes().HELIX_HELIX) ==
              contact::GetTypes().HELIX_HELIX == bcl::contact::Types::Enum
                "HELIX_HELIX"
=std=bcl=> successful example check:
               contact::GetTypes().Reverse( contact::GetTypes().HELIX_SHEET) ==
              contact::GetTypes().SHEET_HELIX == bcl::contact::Types::Enum
                "SHEET_HELIX"
=std=bcl=> successful example check:
               contact::GetTypes().Reverse( contact::GetTypes().SHEET_HELIX) ==
              contact::GetTypes().HELIX_SHEET == bcl::contact::Types::Enum
                "HELIX_SHEET"
=std=bcl=> successful example check:
               contact::GetTypes().Reverse( contact::GetTypes().STRAND_HELIX) ==
              contact::GetTypes().HELIX_STRAND == bcl::contact::Types::Enum
                "HELIX_STRAND"
=std=bcl=> successful example check:
               contact::GetTypes().Reverse( contact::GetTypes().UNDEFINED_STRAND_HELIX) ==
              contact::GetTypes().UNDEFINED_HELIX_STRAND == bcl::contact::Types::Enum
                "UNDEFINED_HELIX_STRAND"
=std=bcl=> successful example check:
               contact::GetTypes().TypeFromSSTypes( sse_helix, sse_strand) ==
              contact::GetTypes().HELIX_SHEET == bcl::contact::Types::Enum
                "HELIX_SHEET"
=std=bcl::app=> BCL Example | END  : ContactTypes ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
ContactTypes_total                        9          0              
total                                     9          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
