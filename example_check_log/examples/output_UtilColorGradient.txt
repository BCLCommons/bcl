./build/linux64_release/bin/bcl-example-static.exe Examples -exec UtilColorGradient 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> UtilColorGradient
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: UtilColorGradient ====================
=std=bcl=> successful example check:
               param_constr( bounds.GetMin()) == *multiple_gradient_points.FirstElement() ==
              bcl::linal::Vector3D
                1	0	0
=crt=bcl::util=> 9 is not within range [1,9] returning max color
=std=bcl=> successful example check:
               param_constr( bounds.GetMax()) == *multiple_gradient_points.LastElement() ==
              bcl::linal::Vector3D
                1	1	0
=std=bcl=> copy constructor test succeeded:
               copy_constr( bounds.GetMin()) == *multiple_gradient_points.FirstElement() ==
              bcl::linal::Vector3D
                1	0	0
=crt=bcl::util=> 9 is not within range [1,9] returning max color
=std=bcl=> copy constructor test succeeded:
               copy_constr( bounds.GetMax()) == *multiple_gradient_points.LastElement() ==
              bcl::linal::Vector3D
                1	1	0
=std=bcl=> clone test succeeded:
               clone_constr->operator()( bounds.GetMin()) == *multiple_gradient_points.FirstElement()
              == bcl::linal::Vector3D
                1	0	0
=crt=bcl::util=> 9 is not within range [1,9] returning max color
=std=bcl=> clone test succeeded:
               clone_constr->operator()( bounds.GetMax()) == *multiple_gradient_points.LastElement()
              == bcl::linal::Vector3D
                1	1	0
=std=bcl=> successful example check:
               clone_constr->GetClassIdentifier() == GetStaticClassName< util::ColorGradient>() ==
              bcl::util::ColorGradient
=crt=bcl::util=> 0 is not within range [1,9] returning min color
=std=bcl=> successful example check:
               calculated_color_points == expected_color_points == bcl::linal::Vector3D
                1	0	0
=crt=bcl::util=> 10 is not within range [1,9] returning max color
=std=bcl=> successful example check:
               calculated_color_points == expected_color_points == bcl::linal::Vector3D
                1	1	0
=std=bcl=> successful example check:
              math::EqualWithinTolerance( expected_color_points( 0), calculated_color_points( 0)) && math::EqualWithinTolerance( expected_color_points( 1), calculated_color_points( 1)) && math::EqualWithinTolerance( expected_color_points( 2), calculated_color_points( 2))
              == 1
=crt=bcl::util=> 9 is not within range [1,9] returning max color
=std=bcl=> successful example check:
               calculated_color_points == expected_color_points == bcl::linal::Vector3D
                1	1	0
=std=bcl=> successful example check:
               calculated_color_points == expected_color_points == bcl::linal::Vector3D
                1	0	0
=std=bcl=> successful example check:
               calculated_color_points == expected_color_points == bcl::linal::Vector3D
                1	1	1
=std=bcl=> Testing the write function
=std=bcl=> Testing the read function
=std=bcl=> reading test succeeded:
               read_output( bounds.GetMin()) == *multiple_gradient_points.FirstElement() ==
              bcl::linal::Vector3D
                1	0	0
=crt=bcl::util=> 9 is not within range [1,9] returning max color
=std=bcl=> reading test succeeded:
               read_output( bounds.GetMax()) == *multiple_gradient_points.LastElement() ==
              bcl::linal::Vector3D
                1	1	0
=std=bcl::app=> BCL Example | END  : UtilColorGradient ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
UtilColorGradient_total                  15          0              
total                                    15          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
