./build/linux64_release/bin/bcl-example-static.exe Examples -exec MathAssignments 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> MathAssignments
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: MathAssignments ====================
=std=bcl=> successful example check:  math::Assign< float>().GetClassIdentifier() == bcl::math::Assign<float>
=std=bcl=> successful example check:  math::PlusEquals< float>().GetClassIdentifier() == bcl::math::PlusEquals<float>
=std=bcl=> successful example check:  math::MinusEquals< float>().GetClassIdentifier() == bcl::math::MinusEquals<float>
=std=bcl=> successful example check:  math::TimesEquals< float>().GetClassIdentifier() == bcl::math::TimesEquals<float>
=std=bcl=> successful example check:  math::DivideEquals< float>().GetClassIdentifier() == bcl::math::DivideEquals<float>
=std=bcl=> successful example check:  math::PowerEquals< float>().GetClassIdentifier() == bcl::math::PowerEquals<float>
=std=bcl=> successful example check:
               math::PlusEquals< std::string>().GetClassIdentifier() ==
              bcl::math::PlusEquals<std::string>
=std=bcl=> OPERATION: +
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 1.5, "+", 10.0f) == 11.5
=std=bcl=> OPERATION: -
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 11.5, "-", 10.0f) == 1.5
=std=bcl=> OPERATION: *
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 1.5, "*", 2.0f) == 2.0 * 1.5 == 3
=std=bcl=> OPERATION: /
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 1.5, "/", 2.0f) == 1.5 / 2.0 == 0.75
=std=bcl=> OPERATION: ^
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 1.5, "^", 3.0f) == 1.5 * 1.5 * 1.5 == 3.375
=std=bcl=> successful example check:  DoAssignmentOp( new_value = 76.9, math::Assign< float>(), 10.0f) == 10.0 == 10
=std=bcl=> OPERATION: ^
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 3.0, "^", 2.0f) == 9.0 == 9
=std=bcl=> OPERATION: %
=std=bcl=> successful example check:  DoAssignmentOpViaEnum( new_value = 100.0, "%", 8.0f) == fmod( 100.0, 8.0) == 4
=std=bcl=> successful example check:
              DoAssignmentOp( new_value = 1.5f, math::AssignmentByComparison< float, std::greater_equal>(), 10.0f) == 0.0f
              == 0
=std=bcl=> successful example check:
              DoAssignmentOp( new_value = 10.0f, math::AssignmentByComparison< float, std::greater_equal>(), 10.0f) == 1.0f
              == 1
=std=bcl::app=> BCL Example | END  : MathAssignments ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
MathAssignments_total                    19          0              
total                                    19          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
