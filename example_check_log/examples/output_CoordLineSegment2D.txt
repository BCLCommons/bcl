./build/linux64_release/bin/bcl-example-static.exe Examples -exec CoordLineSegment2D 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> CoordLineSegment2D
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: CoordLineSegment2D ====================
=std=bcl=> successful example check:
               line_segment_1.GetStartPoint() == start_point == bcl::linal::Vector2D
                0	0
=std=bcl=> successful example check:
               line_segment_1.GetEndPoint() == end_point == bcl::linal::Vector2D
                5	5
=std=bcl=> successful example check:
               line_segment_1.GetDirection() == end_point == bcl::linal::Vector2D
                5	5
=std=bcl=> successful example check:
               line_segment_default.GetStartPoint() == start_point == bcl::linal::Vector2D
                0	0
=std=bcl=> successful example check:
               line_segment_default.GetEndPoint() == end_point_6 == bcl::linal::Vector2D
                6	0
=std=bcl=> successful example check:
               line_segment_default.GetDirection() == end_point_6 == bcl::linal::Vector2D
                6	0
=std=bcl=> SetDirection test succeeded:
               line_segment_default.GetDirection() == end_point == bcl::linal::Vector2D
                5	5
=std=bcl=> successful example check:
               coord::LineSegment2D( start_point, end_point).DistanceToPoint( end_point) == 0.0 ==
              0
=std=bcl=> successful example check:
               coord::LineSegment2D( start_point, end_point).DistanceToPoint( start_point) == 0.0
              == 0
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).DistanceToPoint( linal::Vector2D( 2.5, 5.0)) == 1.76777
               (+/- 0.001)
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).Overlaps ( coord::LineSegment2D( start_point, 2.0 * end_point) )
              == 1
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).Overlaps ( coord::LineSegment2D( start_point, end_point) ) == 1
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).Overlaps ( coord::LineSegment2D( start_point, -end_point) ) == 0
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).DoesIntersect ( coord::LineSegment2D( start_point, -end_point) )
              == 1
=std=bcl=> successful example check:
              coord::LineSegment2D( start_point, end_point).ShortestLineBetween ( coord::LineSegment2D( start_point, -end_point) ).First()
              == coord::LineSegment2D( linal::Vector2D( 0.0, 0.0), linal::Vector2D( 0.0, 0.0)) ==
              bcl::coord::LineSegment2D
                bcl::linal::Vector2D
                  0	0
                bcl::linal::Vector2D
                  0	0
=std=bcl=> successful example check:
              coord::LineSegment2D( linal::Vector2D( 0.0, 0.0), linal::Vector2D( 5.0, 5.0)).ShortestLineBetween ( coord::LineSegment2D( linal::Vector2D( 1.0, 0.0), linal::Vector2D( 10.0, 5.0)) ).First()
              == coord::LineSegment2D( linal::Vector2D( 0.5, 0.5), linal::Vector2D( 1.0, 0.0)) ==
              bcl::coord::LineSegment2D
                bcl::linal::Vector2D
                  0.5	0.5
                bcl::linal::Vector2D
                  1	0
=std=bcl=> successful example check:  line_segment_1.GetLength() == length_5 == 7.07107
=std=bcl=> successful example check:  line_segment_default.GetLength() == length_6 == 6
=std=bcl::app=> BCL Example | END  : CoordLineSegment2D ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
CoordLineSegment2D_total                 19          0              
total                                    19          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
