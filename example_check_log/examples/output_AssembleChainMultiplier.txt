./build/linux64_release/bin/bcl-example-static.exe Examples -exec AssembleChainMultiplier 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> AssembleChainMultiplier
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: AssembleChainMultiplier ====================
=std=bcl=> building model
=std=bcl::pdb=> HELIX line is ignored, since helix class is not considered:
HELIX    2  H2 LEU A   56  TYR A   59  5                                   4    
=std=bcl=> Clone test succeeded:  clone_construct->GetInitialChainID() == transformer_construct.GetInitialChainID() == A
=std=bcl=> successful example check:  clone_construct->GetClassIdentifier() == bcl::assemble::ChainMultiplier
=std=bcl=> successful example check:  transformer_construct.GetInitialChainID() == A
=std=bcl=> successful example check:  transformer_construct.GetNewChainID() == B
=std=bcl=> successful example check:
               transformer_construct.GetTransformationMatrix() == sp_transform ==
              bcl::util::ShPtr<bcl::math::TransformationMatrix3D>
                12345678
                bcl::math::TransformationMatrix3D
                  bcl::linal::Matrix<double>
                    4	      4
                    0.309017	-0.951057	0	0	
                    0.951057	0.309017	0	0	
                    0	0	1	0	
                    0	0	0	1	
=std=bcl=> () operator test succeeded:
              multiplied_chain->GetChainID() == 'B' && multiplied_chain->GetOrientation() != protein_model.GetChains().FirstElement()->GetOrientation()
              == 1
=std=bcl=> Read and Write test succeeded:
              transformer_construct.GetInitialChainID() == read_construct.GetInitialChainID() && transformer_construct.GetNewChainID() == read_construct.GetNewChainID()
              == 1
=std=bcl::app=> BCL Example | END  : AssembleChainMultiplier ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
AssembleChainMultiplier_total             7          0              
total                                     7          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 65 MB
