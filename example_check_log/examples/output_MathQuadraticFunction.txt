./build/linux64_release/bin/bcl-example-static.exe Examples -exec MathQuadraticFunction 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> MathQuadraticFunction
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: MathQuadraticFunction ====================
=std=bcl=> successful example check:  math::QuadraticFunction( 2.0, 3.0, 4.0).GetX() == -0.75
=std=bcl=> successful example check:  math::QuadraticFunction( 2.0, 3.0, 4.0).GetY() == 2.875
=std=bcl=> successful example check:  math::QuadraticFunction( avalue, 3.0, 4.0).GetA() == avalue == 2
=std=bcl=> successful example check:  math::QuadraticFunction( xy_coords, a_variable).GetX() == xy_coords.First() == 2
=std=bcl=> successful example check:  math::QuadraticFunction( xy_coords, a_variable).GetY() == xy_coords.Second() == 1
=std=bcl=> successful example check:  math::QuadraticFunction( xy_coords, a_variable).GetA() == a_variable == 3
=std=bcl=> successful example check:
               GetStaticClassName< math::QuadraticFunction>() ==
              clone_constr->GetClassIdentifier() == bcl::math::QuadraticFunction
=std=bcl=> successful example check:  y_value == correct_y_value == 49
=std=bcl=> Completing the Square test succeeded:  util::IsDefined( gen_undef.First()) == 0
=std=bcl=> Completing the Square test succeeded:  util::IsDefined( gen_undef.Second()) == 0
=std=bcl=> Completing the Square test succeeded:  util::IsDefined( gen_undef.Third()) == 0
=std=bcl=> successful example check:
               math::QuadraticFunction( 1.0, -3.0, 2.0).GetRoot().First() == 2.0 == 2
               (+/- 0.001%)
=std=bcl=> successful example check:
               math::QuadraticFunction( 1.0, -3.0, 2.0).GetRoot().Second() == 1.0 == 1
               (+/- 0.001%)
=std=bcl::app=> BCL Example | END  : MathQuadraticFunction ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
MathQuadraticFunction_total              32          0              
total                                    32          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
