./build/linux64_release/bin/bcl-example-static.exe Examples -exec ModelNeuralNetworkSelectiveBackpropagationTolerance 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> ModelNeuralNetworkSelectiveBackpropagationTolerance
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: ModelNeuralNetworkSelectiveBackpropagationTolerance ====================
=std=bcl=> successful example check:  backprop_selector.GetAlias() == Tolerant
=std=bcl=> ShouldBackpropagate always returns true test succeeded:  all_features_backpropagated == 1
=std=bcl=> ShouldBackpropagate with tolerance; all results should have been within the specified tolerance test succeeded:
              number_backpropagated == 0
=std=bcl=> ShouldBackpropagate should notice that the error is outside the tolerance test succeeded:
              number_backpropagated == model_frds.GetSize() == 72
=std=bcl::app=> BCL Example | END  : ModelNeuralNetworkSelectiveBackpropagationTolerance ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>                             success      error error_string 
ModelNeuralNetworkSelectiveBackpropagationTolerance_total          4          0              
total                                                              4          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
