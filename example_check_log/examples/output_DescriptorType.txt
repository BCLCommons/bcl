./build/linux64_release/bin/bcl-example-static.exe Examples -exec DescriptorType 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> DescriptorType
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: DescriptorType ====================
=std=bcl=> successful example check:  scalar.GetDimension() == 0
=std=bcl=> successful example check:  element.GetDimension() == 1
=std=bcl=> successful example check:  pairwise_asymmetric_repeats.GetDimension() == 2
=std=bcl=> successful example check:  triplet_symmetric_no_repeats.GetDimension() == 3
=std=bcl=> successful example check:  scalar.GetSymmetry() == descriptor::Type::e_Symmetric == 1
=std=bcl=> successful example check:  element.GetSymmetry() == descriptor::Type::e_Symmetric == 1
=std=bcl=> successful example check:  pairwise_asymmetric_repeats.GetSymmetry() == descriptor::Type::e_Asymmetric == 0
=std=bcl=> successful example check:  scalar.GetNumberFeatures( 100) == 1
=std=bcl=> successful example check:  element.GetNumberFeatures( 100) == 100
=std=bcl=> successful example check:  pairwise_asymmetric_repeats.GetNumberFeatures( 100) == 100 * 100 == 10000
=std=bcl=> successful example check:  triplet_symmetric_no_repeats.GetNumberFeatures( 100) == 100 * 99 * 98 / 6 == 161700
=std=bcl=> successful example check:  triplet_symmetric_repeats.GetNumberFeatures( 100) == 102 * 101 * 100 / 6 == 171700
=std=bcl=> successful example check:  triplet_asymmetric_no_repeats.GetNumberFeatures( 100) == 100 * 99 * 98 == 970200
=std=bcl=> GeneralizeToHandle test succeeded:  pairwise_asymmetric_repeats_generalized.GetDimension() == 3
=std=bcl=> GeneralizeToHandle test succeeded:
               pairwise_asymmetric_repeats_generalized.GetSymmetry() ==
              descriptor::Type::e_Asymmetric == 0
=std=bcl=> GeneralizeToHandle test succeeded:  pairwise_asymmetric_repeats_generalized.ConsiderRepeatedObjects() == 1
=std=bcl=> successful example check:
              descriptor::Type( 3, false, descriptor::Type::e_Symmetric).GetPosition( one_two_three, 5) == 6
=std=bcl=> successful example check:
              descriptor::Type( 3, false, descriptor::Type::e_Asymmetric).GetPosition( one_two_three, 5) == 16
=std=bcl=> successful example check:
              descriptor::Type( 3, true, descriptor::Type::e_Asymmetric).GetPosition( one_two_three, 5) == 38
=std=bcl::app=> BCL Example | END  : DescriptorType ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
DescriptorType_total                     19          0              
total                                    19          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
