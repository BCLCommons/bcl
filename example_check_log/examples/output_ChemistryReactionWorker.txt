./build/linux64_release/bin/bcl-example-static.exe Examples -exec ChemistryReactionWorker 
BCL v4.0.0, r5417, compiled on Mon Nov  2 10:35:50 2020
=std=bcl=> executing application: Examples
=crt=bcl::random=> Seed was set to 5489!
=crt=bcl::random=> Seed was set to 5489!

==================================================================================================================================================

BCL FLAGS

-message_level not set
   <level> Standard (default)
   <verbosity> Summary (default)
-logger not set
   <> Default (default)
   <identifier>  (default)
-help not set
-readme not set
-file_compressed_alternatives not set
-file_compression not set
   <compression_type> Uncompressed (default)
-enums_files not set
-random_seed not set
   <seed> 5489 (default)
-model_path not set
   <model_path_name> model/ (default)
-histogram_path not set
   <path> histogram/ (default)
-opencl not set
   <platform> Disable (default)
-scheduler not set
   <scheduler> Serial (default)
   <number_cpus> 1 (default)

==================================================================================================================================================

APPLICATION FLAGS

-help not set
-readme not set
-namespace not set
-exclude_namespace not set
-exec set
   <example> ChemistryReactionWorker
-all not set
-example_path not set
   <path> example/example_files/ (default)
-application_example_path not set
   <path> /dors/meilerlab/apps/bcl/app_example_files/ (default)

==================================================================================================================================================

=crt=bcl=> WARNING: Examples is a deprecated name for this application.  Use bcl:Examples instead!
=crt=bcl::app=> BCL Example | BEGIN: All Examples ====================
=crt=bcl::app=> BCL Example | BEGIN: ChemistryReactionWorker ====================
=std=bcl=> successful example check:  sp_rxnworker.IsDefined() == 1
=std=bcl=> Amide reaction, first molecule matches a reactant test succeeded:
              worker.MatchesReactants( *mol_itr, amide_rxn).GetSize() == 1
=std=bcl=> Amide reaction, second molecule matches a reactant test succeeded:
              worker.MatchesReactants( *mol_itr, amide_rxn).GetSize() == 1
=std=bcl=> Amide reaction, first product structure matches itself test succeeded:
              worker.MatchesProducts( amide_rxn.GetProduct( 0), amide_rxn).GetSize() == 1
=std=bcl=> Amide reaction (2 reactants, 2 products)
=std=bcl=> ExecuteReaction() on amide reaction produced appropriate number of products test succeeded:
              amide_res.GetSize() == 2
=std=bcl=> React() gave the same output as ExecuteReaction() for a trivial ordering test succeeded:
               amide_res.GetSize()
              == 2
=std=bcl=> ExecuteIntramolecularReaction() produced appropriate number of products test succeeded:
              amide_intra_res.GetSize() == 2
=std=bcl=> React(), amide reaction, produced the correct number of products after reordering reactants test succeeded:
              react_res.GetSize() == 2
=std=bcl=> React(), click reaction, produced the correct number of products test succeeded:  click_res.GetSize() == 1
=std=bcl=> React(), retro diels-alder reaction, produced the correct number of products test succeeded:
              retroda_res.GetSize() == 2
=std=bcl=> React(), sigmatropic reaction, produced the correct number of products test succeeded:
              sigmatropic_res.GetSize() == 1
=std=bcl=> successful example check:  io::File::FilesMatch( output_filename, correct_filename) == 1
=std=bcl::app=> BCL Example | END  : ChemistryReactionWorker ====================
=crt=bcl::app=> BCL Example | END  : All Examples ====================
=std=bcl::app=> The results table
bcl::storage::Table<std::string>    success      error error_string 
ChemistryReactionWorker_total            12          0              
total                                    12          0              

==================================================================================================================================================
=slt=bcl=> bcl has run for 00:00:00, peak virtual memory used: 132 MB, peak physical RAM used: 64 MB
