CMAKE_MINIMUM_REQUIRED( VERSION 2.8.8)

SET( LIBRARY_NAME bclexample)
SET( LIBRARY_OBJECTS ${LIBRARY_NAME}-objects)
PROJECT( lib${LIBRARY_NAME})

INCLUDE_DIRECTORIES( "${CMAKE_CURRENT_SOURCE_DIR}/../include/")
INCLUDE_DIRECTORIES( "${CMAKE_CURRENT_SOURCE_DIR}/")
INCLUDE_DIRECTORIES( "${CMAKE_CURRENT_SOURCE_DIR}/../apps/")

SET(
  LIBRARY_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/bcl_app_examples.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example_application_example_helper.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example_bcl.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example_bcl_version.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example_interface.cpp
  ${CMAKE_CURRENT_SOURCE_DIR}/example_proteins.cpp
)
MACRO_CHECK_CMAKE_DIRECTORY_LIST( ${CMAKE_CURRENT_SOURCE_DIR} "${LIBRARY_SOURCES}")

# create objects for all sources in this directory
ADD_LIBRARY( ${LIBRARY_OBJECTS} OBJECT ${LIBRARY_SOURCES})

SET(
	BCL_EXAMPLE_LIBRARY_NAMESPACES
	align
	assemble
	biol
	bzip2
	chemistry
	cluster
	crypt
	command
	contact
	coord
	density
	descriptor
	find
	fold
	function
	graph
	gzip
	io
	iterate
	linal
	math
	mc
	model
	nmr
	openblas
	opencl
	opti
	pdb
	pthread
	quality
	random
	restraint
	sched
	score
	scorestat
	sdf
	signal
	sspred
	storage
	type
	util
)

FOREACH( NAMESPACE ${BCL_EXAMPLE_LIBRARY_NAMESPACES})
	MACRO_ADD_SUBDIRECTORY( ${NAMESPACE})
	IF( SUBDIRECTORY_LIBRARY_NAME)
		IF( LINK_NAMESPACE_ARCHIVES)
			LIST(
				APPEND BCL_EXAMPLE_NAMESPACE_LIBRARIES
				${BCL_LINK_WHOLE_ARCHIVE} ${SUBDIRECTORY_LIBRARY_NAME} ${BCL_LINK_NO_WHOLE_ARCHIVE}
			)
		ELSE()
			LIST( APPEND BCL_EXAMPLES_SOURCE_OBJECTS $<TARGET_OBJECTS:${SUBDIRECTORY_LIBRARY_OBJECTS}>)
		ENDIF()
	ENDIF()
	UNSET( SUBDIRECTORY_LIBRARY_NAME)
	UNSET( SUBDIRECTORY_LIBRARY_SOURCES)
ENDFOREACH()

MACRO_SET_EXECUTABLE_NAME()

# example
SET( BCL_TARGET_EXAMPLE examples)
MACRO_ADD_CUSTOM_TARGET(
	${BCL_TARGET_EXAMPLE}
	COMMENT "example applications"
)

# example executables
SET( EXAMPLES_EXECUTABLE_NAME        "${EXECUTABLE_BASENAME}-example")
SET( EXAMPLES_EXECUTABLE_NAME_STATIC "${EXECUTABLE_BASENAME}-example-static")

IF( LINK_NAMESPACE_ARCHIVES)
	MACRO_ADD_LIBRARY( ${LIBRARY_NAME} STATIC $<TARGET_OBJECTS:${LIBRARY_OBJECTS}>)
	# shared
	MACRO_ADD_EXECUTABLE(
		${EXAMPLES_EXECUTABLE_NAME}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
	)
	TARGET_LINK_LIBRARIES(
		${EXAMPLES_EXECUTABLE_NAME}
		${BCL_LINK_WHOLE_ARCHIVE} ${LIBRARY_NAME}     ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_EXAMPLE_NAMESPACE_LIBRARIES}
	)
	# static
	MACRO_ADD_EXECUTABLE(
		${EXAMPLES_EXECUTABLE_NAME_STATIC}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
	)
	TARGET_LINK_LIBRARIES(
		${EXAMPLES_EXECUTABLE_NAME_STATIC}
		${BCL_LINK_WHOLE_ARCHIVE} ${LIBRARY_NAME}     ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_EXAMPLE_NAMESPACE_LIBRARIES}
		${BCL_SOURCE_LIBRARIES}
	)
ELSE( LINK_NAMESPACE_ARCHIVES)
	# shared
	MACRO_ADD_EXECUTABLE(
		${EXAMPLES_EXECUTABLE_NAME}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
		$<TARGET_OBJECTS:${LIBRARY_OBJECTS}>
		${BCL_EXAMPLES_SOURCE_OBJECTS}
	)
	# static
	MACRO_ADD_EXECUTABLE(
		${EXAMPLES_EXECUTABLE_NAME_STATIC}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
		$<TARGET_OBJECTS:${LIBRARY_OBJECTS}>
		${BCL_EXAMPLES_SOURCE_OBJECTS}
		${BCL_SOURCE_OBJECTS}
	)
ENDIF( LINK_NAMESPACE_ARCHIVES)

TARGET_LINK_LIBRARIES( ${EXAMPLES_EXECUTABLE_NAME}        ${BCL_LIBRARY_NAME})
TARGET_LINK_LIBRARIES( ${EXAMPLES_EXECUTABLE_NAME_STATIC} ${EXTERN_LINK_LIBRARIES})

ADD_DEPENDENCIES( ${BCL_TARGET_SHARED}  ${EXAMPLES_EXECUTABLE_NAME})
ADD_DEPENDENCIES( ${BCL_TARGET_STATIC}  ${EXAMPLES_EXECUTABLE_NAME_STATIC})
ADD_DEPENDENCIES( ${BCL_TARGET_EXAMPLE} ${EXAMPLES_EXECUTABLE_NAME} ${EXAMPLES_EXECUTABLE_NAME_STATIC})

MACRO_ADD_SUBDIRECTORY( apps)
# check that example apps have been added sucessfully
IF( NOT SUBDIRECTORY_LIBRARY_NAME)
	RETURN()
ENDIF()

SET( EXAMPLEAPPS_EXECUTABLE_NAME        "${EXECUTABLE_BASENAME}-example-apps")
SET( EXAMPLEAPPS_EXECUTABLE_NAME_STATIC "${EXECUTABLE_BASENAME}-example-apps-static")

IF( LINK_NAMESPACE_ARCHIVES)
	# dynamic
	MACRO_ADD_EXECUTABLE(
		${EXAMPLEAPPS_EXECUTABLE_NAME}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
	)
	TARGET_LINK_LIBRARIES(
		${EXAMPLEAPPS_EXECUTABLE_NAME}
		${BCL_LINK_WHOLE_ARCHIVE} ${LIBRARY_NAME}              ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_LINK_WHOLE_ARCHIVE} ${SUBDIRECTORY_LIBRARY_NAME} ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_APP_GROUP_LIBRARIES}
	)
	# static
	MACRO_ADD_EXECUTABLE(
		${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
	)
	TARGET_LINK_LIBRARIES(
		${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC}
		${BCL_LINK_WHOLE_ARCHIVE} ${LIBRARY_NAME}              ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_LINK_WHOLE_ARCHIVE} ${SUBDIRECTORY_LIBRARY_NAME} ${BCL_LINK_NO_WHOLE_ARCHIVE}
		${BCL_APP_GROUP_LIBRARIES}
		${BCL_SOURCE_LIBRARIES}
	)
ELSE()
	# dynamic
	MACRO_ADD_EXECUTABLE(
		${EXAMPLEAPPS_EXECUTABLE_NAME}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
		$<TARGET_OBJECTS:${LIBRARY_OBJECTS}>
		$<TARGET_OBJECTS:${SUBDIRECTORY_LIBRARY_OBJECTS}>
		${BCL_APPS_SOURCE_OBJECTS}
	)
	# static
	MACRO_ADD_EXECUTABLE(
		${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC}
		EXCLUDE_FROM_ALL
		${BCL_MAIN_OBJECT}
		$<TARGET_OBJECTS:${LIBRARY_OBJECTS}>
		$<TARGET_OBJECTS:${SUBDIRECTORY_LIBRARY_OBJECTS}>
		${BCL_APPS_SOURCE_OBJECTS}
		${BCL_SOURCE_OBJECTS}
	)
ENDIF()

TARGET_LINK_LIBRARIES( ${EXAMPLEAPPS_EXECUTABLE_NAME}        ${BCL_LIBRARY_NAME})
TARGET_LINK_LIBRARIES( ${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC} ${EXTERN_LINK_LIBRARIES})

ADD_DEPENDENCIES( ${BCL_TARGET_SHARED}  ${EXAMPLEAPPS_EXECUTABLE_NAME})
ADD_DEPENDENCIES( ${BCL_TARGET_STATIC}  ${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC})
ADD_DEPENDENCIES( ${BCL_TARGET_EXAMPLE} ${EXAMPLEAPPS_EXECUTABLE_NAME} ${EXAMPLEAPPS_EXECUTABLE_NAME_STATIC})
