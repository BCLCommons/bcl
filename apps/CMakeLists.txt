CMAKE_MINIMUM_REQUIRED( VERSION 2.8.8)

INCLUDE_DIRECTORIES( "${CMAKE_CURRENT_SOURCE_DIR}/../include/")

# this is the actual main
SET(
  SOURCE_MAIN
  ${CMAKE_CURRENT_SOURCE_DIR}/apps.cpp
)
ADD_LIBRARY( main OBJECT EXCLUDE_FROM_ALL ${SOURCE_MAIN})
SET( BCL_MAIN_OBJECT $<TARGET_OBJECTS:main>)
# to use for apps outside of this source tree (i.e. examples)
SET( BCL_MAIN_OBJECT ${BCL_MAIN_OBJECT} PARENT_SCOPE)

# all subfolders
SET(
	BCL_APP_LIBRARY_GROUPS
	descriptor
	internal/biology
	internal/chemistry
	internal/util
	model
	molecule
	restraint
#  sequence
	release
)

# foreach subfolder, acquire the libs and make a list to link against
FOREACH( GROUP ${BCL_APP_LIBRARY_GROUPS})
	MACRO_ADD_SUBDIRECTORY( ${GROUP})
	IF( SUBDIRECTORY_LIBRARY_NAME)
		IF( LINK_NAMESPACE_ARCHIVES)
			LIST(
				APPEND BCL_APP_GROUP_LIBRARIES
				${BCL_LINK_WHOLE_ARCHIVE} ${SUBDIRECTORY_LIBRARY_NAME} ${BCL_LINK_NO_WHOLE_ARCHIVE}
			)
		ELSE()
			LIST( APPEND BCL_APPS_SOURCE_OBJECTS ${SUBDIRECTORY_LIBRARY_OBJECTS})
		ENDIF()
	ENDIF()
	UNSET( SUBDIRECTORY_LIBRARY_NAME)
	UNSET( SUBDIRECTORY_LIBRARY_OBJECTS)
ENDFOREACH()

SET( BCL_APPS_SOURCE_OBJECTS ${BCL_APPS_SOURCE_OBJECTS} PARENT_SCOPE)

# set the executable name and suffix
MACRO_SET_EXECUTABLE_NAME()

# release and internal apps
SET( APPS_EXECUTABLE_NAME        "${EXECUTABLE_BASENAME}-apps")
SET( APPS_EXECUTABLE_NAME_STATIC "${EXECUTABLE_BASENAME}-apps-static")

IF( LINK_NAMESPACE_ARCHIVES)
	# to use for apps outside of this source tree (i.e. examples)
	SET( BCL_APP_GROUP_LIBRARIES ${BCL_APP_GROUP_LIBRARIES} PARENT_SCOPE)

	# shared executable
	MACRO_ADD_EXECUTABLE( ${APPS_EXECUTABLE_NAME} ${BCL_MAIN_OBJECT})
	TARGET_LINK_LIBRARIES(
		${APPS_EXECUTABLE_NAME}
		${BCL_APP_GROUP_LIBRARIES}
	)

	# static executable
	MACRO_ADD_EXECUTABLE( ${APPS_EXECUTABLE_NAME_STATIC} ${BCL_MAIN_OBJECT})
	TARGET_LINK_LIBRARIES(
		${APPS_EXECUTABLE_NAME_STATIC}
		${BCL_APP_GROUP_LIBRARIES}
		${BCL_SOURCE_LIBRARIES}
	)
ELSE( LINK_NAMESPACE_ARCHIVES)
	# shared executable
	MACRO_ADD_EXECUTABLE(
		${APPS_EXECUTABLE_NAME} ${BCL_MAIN_OBJECT}
		${BCL_APPS_SOURCE_OBJECTS}
	)

	# static executable
	MACRO_ADD_EXECUTABLE(
		${APPS_EXECUTABLE_NAME_STATIC} ${BCL_MAIN_OBJECT}
		${BCL_APPS_SOURCE_OBJECTS}
		${BCL_SOURCE_OBJECTS}
	)
ENDIF()

TARGET_LINK_LIBRARIES( ${APPS_EXECUTABLE_NAME}        ${BCL_LIBRARY_NAME})
TARGET_LINK_LIBRARIES( ${APPS_EXECUTABLE_NAME_STATIC} ${EXTERN_LINK_LIBRARIES})

ADD_DEPENDENCIES( ${BCL_TARGET_SHARED} ${APPS_EXECUTABLE_NAME})
ADD_DEPENDENCIES( ${BCL_TARGET_STATIC} ${APPS_EXECUTABLE_NAME_STATIC})
ADD_DEPENDENCIES( ${BCL_TARGET_APPS}   ${APPS_EXECUTABLE_NAME} ${APPS_EXECUTABLE_NAME_STATIC})

INSTALL(
	TARGETS ${APPS_EXECUTABLE_NAME_STATIC}
	RUNTIME DESTINATION bin
	COMPONENT AppsStatic
)
CPACK_ADD_COMPONENT(
	AppsStatic
	DISPLAY_NAME "bcl apps static"
	DESCRIPTION "all bcl applications - statically linked"
	GROUP BclStaticApplications
)
LIST( APPEND SHARED_EXECUTABLES ${APPS_EXECUTABLE_NAME})
INSTALL(
	TARGETS ${APPS_EXECUTABLE_NAME}
	RUNTIME DESTINATION bin
	COMPONENT AppsDynamic
)
CPACK_ADD_COMPONENT(
	AppsDynamic
	DISPLAY_NAME "bcl apps dynamic"
	DESCRIPTION "all bcl applications - dynamically linked"
	DEPENDS DynamicLibrary
	GROUP BclDynamicApplications
)

SET( APPS_EXECUTABLE_NAME ${APPS_EXECUTABLE_NAME} PARENT_SCOPE)
SET( APPS_EXECUTABLE_NAME_STATIC ${APPS_EXECUTABLE_NAME_STATIC} PARENT_SCOPE)

# prepare all release executables
IF( BCL_LICENSE)
	# license
	SET( BCL_TARGET_LICENSE license)
	MACRO_ADD_CUSTOM_TARGET(
		${BCL_TARGET_LICENSE}
		COMMENT "bcl release application"
	)

	# just use bcl.exe for the license/release version
	SET( APPS_RELEASE_EXECUTABLE_NAME_STATIC "${EXECUTABLE_BASENAME}")

	IF( LINK_NAMESPACE_ARCHIVES)
		MACRO_ADD_EXECUTABLE( ${APPS_RELEASE_EXECUTABLE_NAME_STATIC} ${BCL_MAIN_OBJECT})
		TARGET_LINK_LIBRARIES(
			${APPS_RELEASE_EXECUTABLE_NAME_STATIC}
			${BCL_APP_GROUP_LIBRARIES}
			${BCL_SOURCE_LIBRARIES}
		)
	ELSE( LINK_NAMESPACE_ARCHIVES)
		# static executable
		MACRO_ADD_EXECUTABLE(
			${APPS_RELEASE_EXECUTABLE_NAME_STATIC} ${BCL_MAIN_OBJECT}
			${BCL_APPS_SOURCE_OBJECTS}
			${BCL_SOURCE_OBJECTS}
		)
	ENDIF( LINK_NAMESPACE_ARCHIVES)

	TARGET_LINK_LIBRARIES( ${APPS_RELEASE_EXECUTABLE_NAME_STATIC}       ${EXTERN_LINK_LIBRARIES})

	INSTALL(
		TARGETS ${APPS_RELEASE_EXECUTABLE_NAME_STATIC}
		RUNTIME DESTINATION ${BCL_EXEC_PREFIX}
		COMPONENT BclReleaseAll
	)
	LIST( APPEND CPACK_PACKAGE_EXECUTABLES "${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.exe" "BCL-${BCL_VERSION}")
	LIST( APPEND CPACK_NSIS_MENU_LINKS "${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.exe" "BCL-${BCL_VERSION}")
	SET( CPACK_CREATE_DESKTOP_LINKS "${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.exe")

	# workaround for the fact that CPACK_NSIS_MENU_LINKS are currently ignored
	SET( CPACK_NSIS_EXTRA_INSTALL_COMMANDS "
		CreateShortCut \\\"$DESKTOP\\\\${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.lnk\\\" \\\"$INSTDIR\\\\bin\\\\${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.exe\\\"
	")
	SET(CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "
		Delete \\\"$DESKTOP\\\\${APPS_RELEASE_EXECUTABLE_NAME_STATIC}.lnk\\\"
	")
ENDIF( BCL_LICENSE)
